Program Lab4R1;
{ The ptogram output the numbers that
  are in each row of a two-dimensional array }

{$APPTYPE CONSOLE} // Console application

// Modules declaration
uses
  System.SysUtils;

// Cost declaration
Const
  N = 4;

  // Variables declaration
Var
  i, j, m, k, error: integer;
  Arr: array [1 .. N, 1 .. N] of integer;
  check, check2: boolean;
  vvod: string;
  { i,j,m - Array indexes, cycle counters;
    k - check for coincidence in a number of numbers;
    Arr - Initial array;
    check - check for coincidence in a number of numbers;
    check2 - check for coincidence in a number of numbers.}

Begin
  // Filling the array Arr
  for i := 1 to N do
  begin
    repeat
      Writeln('Введите элемент массива: ', '[', i, ',', 1, ']');
      Readln(vvod);
      val(vvod, Arr[i, 1], error);
      if error > 0 then
      begin
        Writeln('Вы ввели неверный член массива');
      end;
    until error = 0;
    for j := 2 to N do
    begin
      repeat
        repeat
          Writeln('Введите элемент массива: ', '[', i, ',', j, ']');
          Readln(vvod);
          val(vvod, Arr[i, j], error);
          if error > 0 then
          begin
            Writeln('Вы ввели неверный член массива');
          end;
        until error = 0;
        if Arr[i, j] < Arr[i, j - 1] then
          Writeln('Строки в массиве отсортированы по возрастанию, введите число больше предыдущего');
      until Arr[i, j] >= Arr[i, j - 1];
    end;
  end;

  // Printing array Arr
  Writeln;
  Writeln('Итоговый массив: ');
  for i := 1 to N do
  begin
    for j := 1 to N do
    begin
      write(Arr[i, j]:4, ' ');
    end;
    Writeln;
  end;

  // Searching for coincidence in a number of numbers
  write('Повторяющиеся элементы: ');
  check2 := true;
  // Outer loop through 1st line
  for m := 1 to N do
  begin
    check := true;
    if (check = true) and (check2 = true) then
    begin

      // Loop through the rest of the lines
      for i := 2 to N do
      begin

        // Checking the condition if 1 element in the line is
        // less than the element being checked
        if (check = true) and (Arr[1, m] >= Arr[i, 1]) then
        begin
          k := 0;
          j := 1;
          // Loop until the item being checked is
          // larger than the item in the line
          while (Arr[1, m] >= Arr[i, j]) and (j <= N) do
          begin
            // Checking for a match
            if Arr[1, m] = Arr[i, j] then
              k := k + 1;
            j := j + 1;
          end;

          // Checking for matches variable in a row
          if k = 0 then
            check := false;
        end
        else
          check := false;

      end;
    end;
    // Output matching element
    if (check = true) and (check2=true) then
      write(Arr[1, m], ' ');

    // Checking if the next element in the first
    // line matches the previous one
    if Arr[1, m] = Arr[1, m + 1] then
      check2 := false
    else
      check2 := true;
  end;

  Readln;

End.
